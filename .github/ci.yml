name: CI

# Remove default permissions of GITHUB_TOKEN for security
# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
permissions: {}

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/.cache/ms-playwright

jobs:
  test:
    name: 'Test: node-${{ matrix.node_version }}, ${{ matrix.os }}'
    runs-on: ${{ matrix.os }}

    timeout-minutes: 30

    strategy:
      matrix:
        os: [ubuntu-latest]
        node_version: [18, 20, 22]
        include:
          - os: macos-latest
            node_version: 20
          - os: windows-latest
            node_version: 20
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

    - name: Install pnpm
      uses: pnpm/action-setup@v4

    - name: Set node version to ${{ matrix.node_version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node_version }}

    - name: Resolve package versions
      id: resolve-package-versions
      shell: bash
      run: >
        echo "$(
          node -e "
            const fs = require('fs');
            const lockfile = fs.readFileSync('./pnpm-lock.yaml', 'utf8');
            const pattern = (name) => new RegExp(name + ':\\\s+specifier: [\\\s\\\w\\\.^]+version: (\\\d+\\\.\\\d+\\\.\\\d+)');
            const playwrightVersion = lockfile.match(pattern('playwright'))[1];
            console.log('PLAYWRIGHT_VERSION=' + playwrightVersion);
          "
        )" >> $GITHUB_OUTPUT

    - name: Print versions
      shell: bash
      run: echo "${{ toJson(steps.resolve-package-versions.outputs) }}"

    - name: Check resolved package versions
      shell: bash
      if: |
        contains(fromJSON('[null, "", "undefined"]'), steps.resolve-package-versions.outputs.PLAYWRIGHT_VERSION)
      run: echo "Failed to resolve package versions. See log above." && exit 1

    - name: Cache Playwright v${{ steps.resolve-package-versions.outputs.PLAYWRIGHT_VERSION }}
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
        key: ${{ runner.os }}-playwright-${{ steps.resolve-package-versions.outputs.PLAYWRIGHT_VERSION }}
        restore-keys: |
          ${{ runner.os }}-playwright-

      - uses: browser-actions/setup-chrome@v1

      - name: Install
        run: pnpm i

      - name: Install Playwright Dependencies
        run: pnpm exec playwright install chromium --with-deps

      - name: Build
        run: pnpm run build

      - name: Test
        run: pnpm run test
